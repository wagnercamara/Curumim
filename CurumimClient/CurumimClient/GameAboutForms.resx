<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAfQAAAH0CAYAAADL1t+KAAAABGdBTUEAALGPC/xhBQAAHJVJREFUeF7t
        3Unstotd1nE60rqgpVCmEmiLyE4U7BAbJTJEUYkbUdBqk4puXRLD0JIONKCJ3SglLqwbE0tNCCA0LDBt
        ZKUMbQxaWmhqEQoilra0Vaz+7sZHTl6uc877Ptcz3MPnk3xDuukJv/vmuXjf8x8+CwAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAuKvPnV42vWp64/T26d9Nvzi9f/rv06em/yNJB235DFw+C5fPxOWzcfmMXD4rl8/M5bNz+Qx9
        7gQ39QXTt05vmf7jlF5eSdKjtwz+v5j+3vSlE1zci6fXTO+Z0ksoSbpsn56Wz9zvnV40wdmeM33H9M5p
        ebHSCydJun7LZ/DyWfx3ps+Z4KE8f3rt9DtTerEkSffro9Obpy+eIPrC6U3Tx6f0EkmS1tMnp+Vrmfy7
        dv6/Z0+vm5aXI700kqT19onp+6ZnTRzYN0z/aUoviSRpOy1fIf8XJw5m+dazfz2ll0KStN1+ZFo+4zmA
        r5t+bUovgiRp+314+qaJnXrK9J3T70/pBZAk7afls375jqWnTezI8iMFf3pKD12StN/eMS0/V4Qd+KLp
        56f0oCVJ+2/5iXMvmNiw5ccF/vKUHrAk6Tj9yvSVExv0J6bfmNKDlSQdr2UTvnpiQ75i+vUpPVBJ0nH7
        zemrJjZg+f7D907pQUqStPwQGj8LfuWW38Lzc1N6gJIknXr39LkTK/TUybemSZIetp+alu1gZV4zpQcm
        SdLj9V0TK/Lnpnv/BLjfnX58ev30yukl0/Jtc8tf6TxjAjiq5TNw+SxcPhNfOi2fkctn5U9My2dn+ky9
        Vct2LD8SnBVYfo/5f53Sg7p2H5y+f3rZ9PQJgEezfHa+fHrTtHymps/aa7f8fg+/0GUFbv1b0z49LX8S
        //rJv3sBuJzlM3X5tdbLn9yXz9r0GXyt3jZxR8vvvk0P5lot/8+DH0oAcH3LDwf70Sl9Fl+rvzBxB8+e
        lu8lTA/l0r1v8ovzAW5v+RP7L03ps/nSLT8q/FkTN/a6KT2QS/dPJg8Y4H6WP8C9ZUqf0Zdu+Y4pbuhL
        p09O6WFcquUrL791AmAdvm366JQ+sy/VJ6YvmbiRN0/pQVyq5Qf4f80EwLp87fThKX12X6p/NHEDy7cW
        fHxKD+ES/er0RycA1mn5NajLZ3X6DL9EH5ueP3Fly/cqpgdwifwWHoBtWH6r5jV/RfYbJq7oOdNHpnT8
        tuW/11+zA2zH8tfv1/pJc8smLL/wiyv5u1M6/CX6GxMA2/LXpvSZfolePXEl75zS0duWb00DYJt+eEqf
        7W0/M3EFL56u8aMA/SABgG271g8aWzbnhRMX9topHbztL00AbNvyY1vTZ3zbd09c2HumdOym5WezA7AP
        Pzalz/qmX5y4oOV7z6/x1+2+qh1gP5Zf6HLprVj++5Zf082FfPuUDt20/H9yAOzLT07pM79p+Up6LuQa
        X8G4/D5zAPblG6f0md/0QxMXsvz60nTkc/vgtPwifQD2Zfls/9CUPvvP7b0TF/DcKR246Y0TAPv0A1P6
        7G9atojSy6d03KaXTQDs0yum9Nnf9JKJ0qumdNxzW37u79MnAPZp+Yy/9M94f+VEafnr8XTcc/uJCYB9
        u/RXu79+ovT2KR333F43AbBvy68/TRtwbm+bKP3slI57bv7aBGD/Lv2va981UXr3lI57bi+dANi3S39B
        tR8BewEfmNJxz+3LJgD2bfktaWkDzm35bW6UfntKxz23500A7NvnTWkDzu23JkqfmtJxz+2ZEwD7tnzW
        pw04t09OlNJhmwA4hrQBTZTSUZsAOIa0AU2U0lGbADiGtAFNlNJRmwA4hrQBTZTSUZsAOIa0AU2U0lGb
        ADiGtAFNlNJRmwA4hrQBTZTSUZsAOIa0AU2U0lGbADiGtAFNlNJRmwA4hrQBTZTSUZsAOIa0AU2U0lGb
        ADiGtAFNlNJRmwA4hrQBTZTSUZsAOIa0AU2U0lGbADiGtAFNlNJRmwA4hrQBTZTSUZsAOIa0AU2U0lGb
        ADiGtAFNlNJRmwA4hrQBTZTSUZsAOIa0AU2U0lGbADiGtAFNlNJRmwA4hrQBTZTSUZsAOIa0AU2U0lGb
        ADiGtAFNlNJRmwA4hrQBTZTSUZsAOIa0AU2U0lGbADiGtAFNlNJRmwA4hrQBTZTSUZsAOIa0AU2U0lGb
        ADiGtAFNlNJRmwA4hrQBTZTSUZsAOIa0AU2U0lGbADiGtAFNlNJRmwA4hrQBTZTSUZsAOIa0AU2U0lGb
        ADiGtAFNlNJRmwA4hrQBTZTSUZsAOIa0AU2U0lGbADiGtAFNlNJRmwA4hrQBTZTSUZsAOIa0AU2U0lGb
        ADiGtAFNlNJRmwA4hrQBTZTSUZsAOIa0AU2U0lGbADiGtAFNlNJRmwA4hrQBTZTSUZsAOIa0AU2U0lGb
        ADiGtAFNlNJRmwA4hrQBTZTSUZsAOIa0AU2U0lGbADiGtAFNlNJRmwA4hrQBTZTSUZsAOIa0AU2U0lGb
        ADiGtAFNlNJRmwA4hrQBTZTSUZsAOIa0AU2U0lGbADiGtAFNlNJRmwA4hrQBTZTSUZsAOIa0AU2U0lGb
        ADiGtAFNlNJRmwA4hrQBTZTSUZsAOIa0AU2U0lGb2I6n/L//CWvhndyWtAFNlNJRm9iG107/cnr6Z/4T
        3N9Tp38+vekz/4ktSBvQRCkdtYn1W8b89LyMOmtwGvPTe2nUt+H0vC4VpXTUJtbtsWN+yqhzTw+O+Smj
        vn4PPrM2SumoTaxXGvNTRp17eLwxP2XU1y09syZK6ahNrNMTjfkpo84tPdmYnzLq65WeVxOldNQm1udh
        xvyUUecWHnbMTxn1dUrPqolSOmoT6/IoY37KqHNNjzrmp4z6+qTn1EQpHbWJ9ThnzE8Zda7h3DE/ZdTX
        JT2jJkrpqE2sQzPmp4w6l9SO+Smjvh7p+TRRSkdt4v4uMeanjDqXcKkxP2XU1yE9myZK6ahN3Nclx/yU
        Uadx6TE/ZdTvLz2XJkrpqE3czzXG/JRR5xzXGvNTRv2+0jNpopSO2sR9XHPMTxl1HsW1x/yUUb+f9Dya
        KKWjNnF7txjzU0adh3GrMT9l1O8jPYsmSumoTdzW8usm3zqlZ3Gtln/e8oENyfJu3OOd9KtXby89iyZK
        6ahN3N6t/zS05E/qJPd6F582cXvpeTRRSkdt4j6MOvdmzI8nPZMmSumoTdyPUedejPkxpefSRCkdtYn7
        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
        1I8tPZ8mSumoTdyXMefWjPpxpWfTRCkdtYn7Mebci1E/pvRcmiilozZxH8acezPqx5OeSROldNQmbs+Y
        sxZG/VjS82iilI7axG09ZXrrlJ7FtVr+ecsHNyTLu3GPd3L5vwVuKz2LJkrpqE3c3ndO6VlcI38y52Hc
        +k/qr5m4vfQsmiilozZxH7cYdWPOo7jVqBvz+0nPo4lSOmoT93PNUTfmnOPao27M7ys9kyZK6ahN3Nc1
        Rt2Y07jWqBvz+0vPpYlSOmoT93fJUTfmXMKlR92Yr0N6Nk2U0lGbWIdLjLox55IuNerGfD3S82milI7a
        xHo0o27MuYZ21I35uqRn1EQpHbWJdTln1I0513TuqBvz9UnPqYlSOmoT6/Moo27MuYVHHXVjvk7pWTVR
        SkdtYp0eZtSNObf0sKNuzNcrPa8mSumoTazXE426MecenmzUjfm6pWfWRCkdtYl1S6NuzLmnxxt1Y75+
        Dz6zNkrpqE2s32NH3ZizBg+OujHfhtPzulSU0lGb2IZl1I05a3IadWO+HWkDmiilozaxHX7dJGvjndyW
        tAFNlNJRmwA4hrQBTZTSUZsAOIa0AU2U0lGbADiGtAFNlNJRmwA4hrQBTZTSUZsAOIa0AU2U0lGbADiG
        tAFNlNJRmwA4hrQBTZTSUZsAOIa0AU2U0lGbADiGtAFNlNJRmwA4hrQBTZTSUZsAOIa0AU2U0lGbADiG
        tAFNlNJRmwA4hrQBTZTSUZsAOIa0AU2U0lGbADiGtAFNlNJRmwA4hrQBTZTSUZsAOIa0AU2U0lGbADiG
        tAFNlNJRmwA4hrQBTZTSUZsAOIa0AU2U0lGbADiGtAFNlNJRmwA4hrQBTZTSUZsAOIa0AU2U0lGbADiG
        tAFNlNJRmwA4hrQBTZTSUZsAOIa0AU2U0lGbADiGtAFNlNJRmwA4hrQBTZTSUZsAOIa0AU2U0lGbADiG
        tAFNlNJRmwA4hrQBTZTSUZsAOIa0AU2U0lGbADiGtAFNlNJRmwA4hrQBTZTSUZsAOIa0AU2U0lGbADiG
        tAFNlNJRmwA4hrQBTZTSUZsAOIa0AU2U0lGbADiGtAFNlNJRmwA4hrQBTZTSUZsAOIa0AU2U0lGbADiG
        tAFNlNJRmwA4hrQBTZTSUZsAOIa0AU2U0lGbADiGtAFNlNJRmwA4hrQBTZTSUZsAOIa0AU2U0lGbADiG
        tAFNlNJRmwA4hrQBTZTSUZsAOIa0AU2U0lGbADiGtAFNlNJRmwA4hrQBTZTSUZsAOIa0AU2U0lGbADiG
        tAFNlNJRmwA4hrQBTZTSUZsAOIa0AU2U0lGbADiGtAFNlNJRmwA4hrQBTZTSUZsAOIa0AU2U0lGbADiG
        tAFNlNJRmwA4hrQBTZTSUZsAOIa0AU2UPjWlw57bMycA9m35rE8bcG6fnCj99pSOe27PmwDYt8+b0gac
        229NlD4wpeOe25dNAOzbC6e0Aef2/onSu6d03HN76QTAvr18Shtwbr8wUfrZKR333F45AbBvr5rSBpzb
        uyZKb5/Scc/tdRMA+/aGKW3Aub1tovTGKR333H5iAmDffnJKG3Bur58oXfqvTX53esYEwD4tn/EfndIG
        nJt/XXsBL5vScZuWL5YAYJ9eMaXP/qaXTJSeO6XjNn3/BMA+/eCUPvubPmfiAt43pQOf2wenp04A7MvT
        pg9N6bP/3N47cSE/PKUjN33DBMC+fNOUPvOb/unEhXz7lI7c9OMTAPvyjil95jd968SFfMH06Skduulr
        JwD24U9Ol96K5b/v+RMX9J4pHbvpRycA9mH5OSPps77Jj3y9gtdM6dhtf3kCYNv+ypQ+49u+a+LCXjRd
        46/dl6+gf/YEwDb9kelXp/QZ37RszpdPXME7p3T0th+aANimfzalz/a2n5m4ku+Y0tEv0d+cANiWvz6l
        z/RL9OqJK1l+Us9HpnT4tuXn/vqqd4DtWH4c68em9Jne9j8mPx3uypYf25qOf4l+a/qqCYB1+4rpN6b0
        WX6J/Ha1G1i+J/3jU3oAl2j5woqvnABYpz82fWBKn+GXaPlT/+dP3MA/ntJDuFT/bfIb2QDW509NH57S
        Z/el+ocTN/KC6RNTehCXavm96d82AbAOyxcvX/r3nD/Y701fPHFD3zelh3Hp3jL5PnWA+1m+z/xa35r2
        YN8zcWOfPf3nKT2QS/dfpr86AXBb3zL9ypQ+my/dL0/PmriDb57SQ7lWPzZ9zQTAdS3/rvwaP5v9ifrz
        E3f0I1N6MNfsJ6fld+4+dQLgMp42LZ+tPzWlz95r9q8m7mz5NrZfm9IDunYfmn5g+tPT0ycAHs0zpldM
        Pzgtn6nps/baLf9cvyJ1Jb5u+v0pPahbtXzl5b+Z3jC9anrZ9OLpc6dnTgBHtXwGPm9aPhOXbwlePiPf
        OC1/23ntr1p/sv7X9GcmVmT5ysT0sCRJerz+wcTKLP8++x1TemCSJD3Y8reqvhZqpZYfpP8fpvTgJEk6
        9YvTcydWbPnChlt9f7okaXu9b/qiiQ1YvvDi16f0ICVJx+03p+WXu7AhXz1d81frSZK21fIHvT8+sUEv
        mt47pQcrSTpOy4+P9auxN+4Lp5+b0gOWJO2/d09fMrEDz5nu8aMEJUn3bfnWtOU7oNiRp0x/f/qfU3ro
        kqT9tPz00NdOvs98x/7sdK+fFyxJun7LF0R/48QBLN+rfo/f0iZJum7Lb03zi1YO6OunX5rSSyFJ2k7L
        D4v55okDe9b0mukTU3pJJEnr7fem750+e4LPWH6v+vIFFB+Z0ksjSVpPH5vePL1ggujzp2XYf2dKL5Ek
        6X4tvz99GXI/i52Htnzf4qunfzt9ekovliTp+v3vafksXj6TfU85lRdO3zP9wmTcJen6LZ+1y2fud09f
        PsHFLX8l/y3Tm6Z/P6UXUZL06L1/esv0tyf/bpybW36s7EumvzW9YXrb9K7p56fl5fzt6VNTenkl6Qgt
        n4HLZ+Hymbh8Ni6fkctn5eunV07LZ+jyWQoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANzFZ33W/wUIMjOU7depmwAA
        AABJRU5ErkJggg==
</value>
  </data>
</root>